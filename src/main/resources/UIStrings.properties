RegexReplacer.title=Regex Replacer V${project.version} -- by trytocatch@163.com
RegexReplacer.help=Help
RegexReplacer.about=About

HelpFrame.regexHelp=Regex Api
HelpFrame.help=Help Contents
HelpFrame.functionsHelp=Replace Function
HelpFrame.newFunctionHelp=Custom Function Guidance
HelpFrame.title=Help  -- by trytocatch@163.com
AboutDialog.html = <table border=0 align='center' cellPadding=5><tBody><tr/><tr><td/><td align=right>Author:</td><td><a href='https://github.com/trytocatch'>trytocatch</a></td><td/></tr><tr><td/><td align=right>Github:</td><td><a href='https://github.com/trytocatch/RegexReplacer'>https://github.com/trytocatch/RegexReplacer</a></td><td/></tr><tr/><tr/><tBody></table>

SearchPanel.LITERAL=LITERAL
SearchPanel.replaceFunction=replace function
SearchPanel.replaceFunction_tip=enable replace functions in replace expression
SearchPanel.liveUpdate=live update
SearchPanel.getReplacementOnly=replacement only
SearchPanel.getReplacementOnly_tip=show replacement in a new dialog
SearchPanel.returnFocus=return focus
SearchPanel.returnFocus_tip=select the matched context in content box when click on a result
SearchPanel.update=update
SearchPanel.replaceSelected=replace selected
SearchPanel.replaceAll=replace all
SearchPanel.authorLabel=By: trytocatch@163.com
SearchPanel.regexFlags=regular expression flags
SearchPanel.regularExpression=regular expression
SearchPanel.replaceExpression=replace expression
SearchPanel.matchResult=match results
SearchPanel.resultOutOfDate=results has changed, update first
SearchPanel.replacingCanceled=results has changed,replacing has canceled
SearchPanel.resultIsEmpty=result is empty
SearchPanel.selectionIsEmpty=selection is empty, select first
SearchPanel.calculating=calculating...
SearchPanel.resultLabel={0} results matched
SearchPanel.replacement=replacement
SearchPanel.copyAndClose=copy all and close
SearchPanel.sequence=seq
SearchPanel.matchedContent=matched content
SearchPanel.posStart=start
SearchPanel.posEnd=end

SearchPanel.UNIX_LINES_TIP=<html><DD>Enables Unix lines mode. <p> In this mode, only the <tt>'\\n'</tt> line terminator is recognized in the behavior of <tt>.</tt>, <tt>^</tt>, and <tt>$</tt>. <p> Unix lines mode can also be enabled via the embedded flag expression&nbsp;<tt>(?d)</tt>.</html>
SearchPanel.CASE_INSENSITIVE_TIP = <html><DD>Enables case-insensitive matching. <p> By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.<br/>  Unicode-aware case-insensitive matching can be enabled by specifying the <A HREF="../../../java/util/regex/Pattern.html#UNICODE_CASE"><CODE>UNICODE_CASE</CODE></A> flag in conjunction with this flag. <p> Case-insensitive matching can also be enabled via the embedded flag expression&nbsp;<tt>(?i)</tt>. <p> Specifying this flag may impose a slight performance penalty.  </p></html>
SearchPanel.COMMENTS_TIP = <html><DD>Permits whitespace and comments in pattern. <p> In this mode, whitespace is ignored, and embedded comments starting with <tt>#</tt> are ignored until the end of a line. <p> Comments mode can also be enabled via the embedded flag expression&nbsp;<tt>(?x)</tt>.</html>
SearchPanel.MULTILINE_TIP = <html><DD>Enables multiline mode. <p> In multiline mode the expressions <tt>^</tt> and <tt>$</tt> match just after or just before, respectively, a line terminator or the end of the input sequence.<br/>  By default these expressions only match at the beginning and the end of the entire input sequence. <p> Multiline mode can also be enabled via the embedded flag expression&nbsp;<tt>(?m)</tt>.  </p></html>
SearchPanel.LITERAL_TIP = <html><DD>Enables literal parsing of the pattern. <p> When this flag is specified then the input string that specifies the pattern is treated as a sequence of literal characters.<br/> Metacharacters or escape sequences in the input sequence will be given no special meaning. <p>The flags CASE_INSENSITIVE and UNICODE_CASE retain their impact on matching when used in conjunction with this flag. The other flags become superfluous. <p> There is no embedded flag character for enabling literal parsing.</html>
SearchPanel.DOTALL_TIP = <html><DD>Enables dotall mode. <p> In dotall mode, the expression <tt>.</tt> matches any character, including a line terminator.<br/>  By default this expression does not match line terminators. <p> Dotall mode can also be enabled via the embedded flag expression&nbsp;<tt>(?s)</tt>.<br/>  (The <tt>s</tt> is a mnemonic for "single-line" mode, which is what this is called in Perl.)  </p></html>
SearchPanel.UNICODE_CASE_TIP = <html><DD>Enables Unicode-aware case folding. <p> When this flag is specified then case-insensitive matching, when enabled by the <A HREF="../../../java/util/regex/Pattern.html#CASE_INSENSITIVE"><CODE>CASE_INSENSITIVE</CODE></A> flag, is done in a manner consistent with the Unicode Standard.<br/>  By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. <p> Unicode-aware case folding can also be enabled via the embedded flag expression&nbsp;<tt>(?u)</tt>. <p> Specifying this flag may impose a performance penalty.  </p></html>
SearchPanel.CANON_EQ_TIP = <html><DD>Enables canonical equivalence. <p> When this flag is specified then two characters will be considered to match if, and only if, their full canonical decompositions match.<br/> The expression <tt>"a&#92;u030A"</tt>, for example, will match the string <tt>"&#92;u00E5"</tt> when this flag is specified.<br/>  By default, matching does not take canonical equivalence into account. <p> There is no embedded flag character for enabling canonical equivalence. <p> Specifying this flag may impose a performance penalty.  </p></html>

html.JavaRegex=htmls/JavaRegex.html
html.Help=htmls/Help.html
html.Functions=htmls/Functions.html
html.NewFunction=htmls/NewFunction.html